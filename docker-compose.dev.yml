version: '3.8'

services:
  # PostgreSQL Database
  database:
    image: postgres:15-alpine
    container_name: briroom-db-dev
    restart: unless-stopped
    environment:
      POSTGRES_DB: briroom
      POSTGRES_USER: briroom_user
      POSTGRES_PASSWORD: briroom_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./briroom-be/database/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql:ro
    networks:
      - briroom-network

  # Backend API (Development mode with hot reload)
  backend:
    build:
      context: ./briroom-be
      dockerfile: Dockerfile.dev
    container_name: briroom-backend-dev
    restart: unless-stopped
    depends_on:
      - database
    environment:
      NODE_ENV: development
      PORT: 5001
      DB_HOST: database
      DB_PORT: 5432
      DB_NAME: briroom
      DB_USER: briroom_user
      DB_PASSWORD: briroom_password
      JWT_SECRET: dev-jwt-secret-key
    ports:
      - "5001:5001"
    volumes:
      - ./briroom-be:/app
      - /app/node_modules
    networks:
      - briroom-network

  # Frontend Application (Development mode with hot reload)
  frontend:
    build:
      context: ./briroom-fe
      dockerfile: Dockerfile.dev
    container_name: briroom-frontend-dev
    restart: unless-stopped
    depends_on:
      - backend
    environment:
      REACT_APP_API_URL: http://localhost:5001/api
      CHOKIDAR_USEPOLLING: true
    ports:
      - "3000:3000"
    volumes:
      - ./briroom-fe:/app
      - /app/node_modules
    networks:
      - briroom-network

volumes:
  postgres_dev_data:
    driver: local

networks:
  briroom-network:
    driver: bridge
